#!/usr/bin/env node
'use strict'

const opt = require('optimist')
const wsd = require('../lib/wsd')
const FileStream = require('../lib/fileStream')
const fs = require('fs')
const util = require('util')
const writeFile = util.promisify(fs.writeFile)

const argv = opt
  .usage('Generate a diagram with websequencediagrams.com')
  .boolean('h')
  .alias('h', 'help')
  .describe('h', 'Show help')
  .boolean('a')
  .string('f')
  .alias('f', 'format')
  .describe('f', 'Format for output (one of [png, pdf, svg])')
  .default('f', 'png')
  .string('o')
  .alias('o', 'output')
  .describe('o', 'Output file (defaults to [filename].[format])')
  .string('s')
  .alias('s', 'style')
  .describe('s', 'Output style (one of: [' + wsd.styles.join(', ') + '])')
  .string('k')
  .alias('k', 'key')
  .describe('k', 'WebSequenceDiagrams API key.  Key can also be specified with the WSD_APIKEY environment variable.  Requires a premium account.  See https://www.websequencediagrams.com/order.html')
  .default('k', process.env.WSD_APIKEY)
  .wrap(80)
  .argv
if (argv.h) {
  opt.showHelp()
  process.exit(64)
}

const files = argv._.length ? argv._ : ['-']
FileStream.createAll(files)
  .then(async streams => {
    for (const s of streams) {
      const inp = await s.read()
      const [buf, typ] = await wsd.diagram(inp, argv.s, argv.f, argv.k)

      let output = argv.o
      if (!output) {
        const ftyp = {
          'image/png': '.png',
          'application/pdf': '.pdf',
          'image/svg+xml': '.xml'
        }[typ]
        if (!ftyp) {
          throw new Error(`Unknown file MIME type: "${typ}"`)
        }
        output = s.name.replace(/\.wsd$/, ftyp)
      }
      await writeFile(output, buf)
    }
  })
  .catch(er => {
    console.error(er)
    process.exit(1)
  })
